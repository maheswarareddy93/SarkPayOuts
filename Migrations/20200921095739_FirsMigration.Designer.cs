// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SarkPayOuts.Models.DbModels;

namespace SarkPayOuts.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20200921095739_FirsMigration")]
    partial class FirsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SarkPayOuts.Models.DbModels.AdminDetails", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AdminId");

                    b.ToTable("AdminDetails");
                });

            modelBuilder.Entity("SarkPayOuts.Models.DbModels.AgentPayOuts", b =>
                {
                    b.Property<string>("LeadUUID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("AgentId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreationDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal?>("GstAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GstPercentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("InvoiceDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LeadHistory")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PayOutStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal?>("PayoutAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PayoutPercentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal?>("TdsAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TdsPercentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UnitNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LeadUUID");

                    b.ToTable("AgentPayOuts");
                });

            modelBuilder.Entity("SarkPayOuts.Models.DbModels.AgentRegistration", b =>
                {
                    b.Property<string>("AgentId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Aadhar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AgetName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Docuents")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IFSCCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PAN")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentAgentID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AgentId");

                    b.ToTable("AgentRegistration");
                });
#pragma warning restore 612, 618
        }
    }
}
